"""
telegram_business_bot/
‚îú‚îÄ‚îÄ bot/

‚îÇ   ‚îú‚îÄ‚îÄ __init__.py
‚îÇ   ‚îú‚îÄ‚îÄ main.py         ‚Üê –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª —Å –∑–∞–ø—É—Å–∫–æ–º –±–æ—Ç–∞
‚îÇ   ‚îú‚îÄ‚îÄ handlers.py     ‚Üê —Ç—É—Ç –±—É–¥—É—Ç –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å—Å—è –∫–æ–º–∞–Ω–¥—ã
‚îÇ   ‚îî‚îÄ‚îÄ config.py       ‚Üê –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ (—Ç–æ–∫–µ–Ω –∏ —Ç.–¥.)
‚îú‚îÄ‚îÄ requirements.txt    ‚Üê –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
‚îî‚îÄ‚îÄ README.md           ‚Üê –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞
ADMIN_ID=6352026332
"""

from pathlib import Path

# –ó–∞–≥—Ä—É–∑–∫–∞ .env
# env_path = Path(__file__).resolve().parent.parent / '.env'
# print(env_path)
# print(Path(__file__))
# print(Path(__file__).resolve().parent)

current = Path(__file__).resolve()
print([current] + list(current.parents))

from pathlib import Path


def find_project_root(marker_files=('orders.db', '.git')):
    current = Path(__file__).resolve()
    for parent in [current] + list(current.parents):
        if any((parent / marker).exists() for marker in marker_files):
            return parent
    raise RuntimeError("–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∫–æ—Ä–µ–Ω—å –ø—Ä–æ–µ–∫—Ç–∞")


# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
project_root = find_project_root()
file_path = project_root / 'some_folder' / 'file.txt'
print(file_path)



#
    #
    # @router.message(F.text == 'üìù –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑')
    # async def reply_order(message: Message):
    #     await message.answer('–í—ã –≤—ã–±—Ä–∞–ª–∏ –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑ —á–µ—Ä–µ–∑ Reply-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É!')
    #
    #
    # @router.message(F.text == 'üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã')
    # async def reply_contacts(message: Message):
    #     await message.answer('–ù–∞—à–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã: +7 900 123 45 67')
    #
    #
    # @router.message(F.text == '‚ùì –ü–æ–º–æ—â—å')
    # async def reply_help(message: Message):
    #     await message.answer('–ù–∞–ø–∏—à–∏—Ç–µ, —á—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç, –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –∏–∑ –º–µ–Ω—é.')


# def find_project_root(marker=".env"):
#     current = Path(__file__).resolve().parent
#     for parent in [current] + list(current.parents):
#         if (parent / marker).exists():
#             return parent
#     raise RuntimeError("–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∫–æ—Ä–µ–Ω—å –ø—Ä–æ–µ–∫—Ç–∞")
