import asyncio
import logging
from aiogram import Bot, Dispatcher, Router, F
from aiogram.enums import ParseMode
from aiogram.types import Message, CallbackQuery
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.client.default import DefaultBotProperties
from aiogram.filters import Command
from bot.config import BOT_TOKEN
from bot.handlers import order
from bot.database import init_db

# üîê –ù–∞—Å—Ç—Ä–æ–π–∫–∏ webhook
WEBHOOK_PATH = "/webhook"
WEBHOOK_SECRET = "lksdflk834lhjkh*_"  # –ø—Ä–∏–¥—É–º–∞–π —á—Ç–æ-—Ç–æ —Å–ª–æ–∂–Ω–µ–µ
DOMAIN = "https://yourdomain.com"  # –∑–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–π –¥–æ–º–µ–Ω
WEBHOOK_URL = f"{DOMAIN}{WEBHOOK_PATH}"

# ‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞
HOST = "0.0.0.0"
PORT = 8000

async def main():
    logging.basicConfig(level=logging.INFO)

    init_db()
    bot = Bot(token=BOT_TOKEN, default=DefaultBotProperties(parse_mode=ParseMode.HTML))
    dp = Dispatcher(storage=MemoryStorage())

    router = Router()

    main_reply_keyboard = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="üìù –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑")],
            [KeyboardButton(text="üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã")],
            [KeyboardButton(text="‚ùì –ü–æ–º–æ—â—å")]
        ],
        resize_keyboard=True,
        input_field_placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ..."
    )

    @router.message(Command("start"))
    async def cmd_start(message: Message):
        await message.answer("–ü—Ä–∏–≤–µ—Ç! –Ø –±–∏–∑–Ω–µ—Å-–±–æ—Ç. –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?",
                             reply_markup=main_reply_keyboard)

    menu_keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üì¶ –ó–∞–∫–∞–∑–∞—Ç—å", callback_data="order")],
        [InlineKeyboardButton(text="üìû –°–≤—è–∑–∞—Ç—å—Å—è", callback_data="contact")],
        [InlineKeyboardButton(text="‚ùì –°–ø—Ä–∞–≤–∫–∞", callback_data="help")],
        [InlineKeyboardButton(text="üí¨ –û—Ç–∑—ã–≤—ã", callback_data='reviews')]
    ])

    @router.message(Command("menu"))
    async def cmd_menu(message: Message):
        await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=menu_keyboard)

    @router.callback_query(F.data.in_({"order", "contact", "help", "reviews"}))
    async def process_callback(callback: CallbackQuery):
        if callback.data == "order":
            await callback.message.answer("–í—ã –≤—ã–±—Ä–∞–ª–∏ –∑–∞–∫–∞–∑. –°–µ–π—á–∞—Å –æ—Ñ–æ—Ä–º–∏–º!")
        elif callback.data == "contact":
            await callback.message.answer("–ù–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏.")
        elif callback.data == "help":
            await callback.message.answer("–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤—ã–π –±–æ—Ç. –ö–æ–º–∞–Ω–¥—ã: /start, /menu")
        elif callback.data == 'reviews':
            await callback.message.answer('–í—ã –º–æ–∂–µ—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å —Å–≤–æ–π –æ—Ç–∑—ã–≤!')
        await callback.answer("–°–ø–∞—Å–∏–±–æ!", show_alert=True)

    dp.include_router(router)
    dp.include_router(order.router)

    # ‚ùå –£–¥–∞–ª–∏–º polling, –µ—Å–ª–∏ –±—ã–ª
    await bot.delete_webhook(drop_pending_updates=True)

    print(f"üåê –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é webhook: {WEBHOOK_URL}")
    await bot.set_webhook(WEBHOOK_URL, secret_token=WEBHOOK_SECRET)

    print(f"üöÄ –ó–∞–ø—É—Å–∫ webhook-—Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞ {HOST}:{PORT}")
    await dp.start_webhook(
        webhook_path=WEBHOOK_PATH,
        secret_token=WEBHOOK_SECRET,
        bot=bot,
        host=HOST,
        port=PORT
    )

if __name__ == "__main__":
    try:
        asyncio.run(main())
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: {e}")
